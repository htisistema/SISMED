MEMVAR getlist,nivel_acess
******* CON419.PRG: Relatorio -> Duplicatas Vencer/Vencidas
***  CONTAS A PAGAR X CONTAS A RECEBER
*********************************************************
FUNCTION con419
***************
LOCAL MPRG:='CON419',;
      tela,t_ini,t_fim,mtit,mtipo,opcao,mbank,;
      mcod_cli,mcod_vend,m_doc:={},mtot_rec,mtot_apa,msaldo,mdata_aux,mtipo_rel,;
      msaldo_ini,i:=0,mtipo_doc,mdia,bank,mtipo_det:=' ',mdoc_apag:=0,mdoc_rec:=0

PRIVATE mcod_for,mtipo_conta,pag:=0,;
        mtipo_imp,mimp_tipo:=0,marq:=SPACE(35),mcodemp:=SPACE(3)

IF ! ver_nivel(mprg,'RELATORIO DOCUMENTOS A PAGAR X A RECEBER','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
*------------------------------------------------------------------
IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
IF ! AbriArq('sacforn','forn');RETURN NIL;ENDIF
IF ! AbriArq('sacdupp','dupp');RETURN NIL;ENDIF
IF ! AbriArq('saccli','cli');RETURN NIL;ENDIF
IF ! AbriArq('sacdupr','dupr');RETURN NIL;ENDIF
*------------------------------------------------------------------
******************
SELE('forn');ORDSETFOCUS(1)
******************
op_tela(00, 00, 17, 71)
DEVPOS(00,00);DEVOUT("Codigo da Empresa.....:")
DEVPOS(01,00);DEVOUT("Data Inicio...........:")
DEVPOS(02,00);DEVOUT("Data Final............:")
@ 03,00 TO 03,71
janela(03,71,' CONTAS APAGAR ','*')
DEVPOS(04,00);DEVOUT("Codigo Fornecedor.....:")
DEVPOS(05,00);DEVOUT("Tipo Doc..............:")
DEVPOS(06,00);DEVOUT('Tipo Conta............:')
@ 07,00 TO 07,71
janela(07,71,' CONTAS A RECEBER ','*')
DEVPOS(08,00);DEVOUT("Codigo do Cliente.....:")
DEVPOS(09,00);DEVOUT("Codigo do Vendedor....:")
DEVPOS(10,00);DEVOUT("Pag.em [C]art. [B]anco:")
DEVPOS(11,00);DEVOUT("Tipo de Relat. [R]esumo [D]etelhado..:")
DEVPOS(12,00);DEVOUT('[V]encer/Vencida [P]agas ou [E]missao:')
DEVPOS(13,00);DEVOUT('Saldo Inicial R$........:')
WHILE .T.
********* VARIAVEIS DE IMPRESSAO *******************
        mtipo_imp := 'J'
****************************************************
        t_ini=DATE()
        t_fim=DATE()+30
        mdoc_apag := mdoc_rec :=msaldo_ini := mtot_rec := mtot_apa := ;
        mcod_cli := mcod_vend := mcod_for := 0
        mtipo_doc := SPACE(2)
        mtipo_conta := SPACE(4)
        mtipo_rel := bank := SPACE(1)
        mtipo_det := 'D'
        @ 01,24 GET t_ini VALID lim_get() WHEN men_get(01,35,'Informe a data inicial do periodo que deseja imprimir')
        @ 02,24 GET t_fim VALID lim_get() WHEN men_get(02,35,'Informe a data final do periodo que deseja imprimir')
        @ 04,24 GET mcod_for PICT '9999' VALID v_fornece(mcod_for,04,28)
        @ 05,24 GET mtipo_doc PICT '@!' VALID lim_get() WHEN men_get(06,24,'Informe o tipo de DOCUMENTO que deseja <PA>pagamento <DU>duplicata <CH>cheques <FR>fretes ou NAO informe nenhum tipo de DOCUMENTO')
        @ 06,24 GET mtipo_conta PICT '@! X.XX' VALID verdesp(mtipo_conta,06,29,1) .AND. lim_get() WHEN EMPTY(mcod_for) .AND. men_get(07,29,'Identifique o Grupo da Conta preenchendo so o primeiro digito da conta, ou preenchendo todo os espaco p/o tipo de conta <F9>p/Consultar ou deixando em BRANCO p/TODOS')

        @ 08,24 GET mcod_cli PICT "99999" VALID lim_get() .AND. ver_cli(mcod_cli,08,30) WHEN mcod_vend = 0 .AND. men_get(09,30,'Informe o cliente que deseja ou nao informe p/imprimir todos')
        @ 09,24 GET mcod_vend PICT "999" VALID ven(mcod_vend,09,28) .AND. lim_get() WHEN mcod_cli = 0 .AND. men_get(10,30,'Informe o Vendedor que deseja ou nao informe p/imprimir todos')
        @ 10,24 GET bank PICT "@!" VALID bank $ 'C,B, '
        @ 11,40 GET mtipo_det PICT "@!" VALID mtipo_det $ 'R,D'
        @ 12,40 GET mtipo_rel PICT "@!" VALID mtipo_rel $ 'V,P,E'
        @ 13,24 GET msaldo_ini PICT "99,999,999.99"
        READ
        IF LASTKEY()=27
                CLOSE ALL
                wvw_lclosewindow()
                RETURN NIL
        ENDIF
        IF t_ini=CTOD("  /  /  ")
                t_ini=CTOD("11/11/11")
        ENDIF
        IF t_fim=CTOD("  /  /  ")
                t_fim=CTOD("31/12/99")
        ENDIF
        ASIZE(m_doc,0)
*        mdata_aux := t_ini - 1
        AADD(m_doc,{t_ini,0,0,0,0,0,0,0,0,0,0,0,0})
        i := 0
        FOR i = 1 TO t_fim - t_ini
                AADD(m_doc,{t_ini+i,0,0,0,0,0,0,0,0,0,0,0,0})
        NEXT
        i := 0
        FOR i = 1 TO LEN(m_doc)
                IF mtipo_rel = 'V'
                        mtit := 'RELATORIO DE CONTAS A RECEBER X APAGAR (Vencimento)'
                        cons_dup := {}
                        ccomm := "SELECT valor,venc,tip_for,tipo FROM sacdupp WHERE venc = "+sr_cdbvalue(m_doc[i,1])
                        ccomm := ccomm + " AND datpag IS NULL"
                        IF ! EMPTY(mtipo_doc)
                                ccomm := ccomm + " AND tipo = "+sr_cdbvalue(mtipo_doc)
                        ENDIF
                        IF ! EMPTY(mcod_for)
                                ccomm := ccomm + " AND fornec = "+sr_cdbvalue(STRZERO(mcod_for,4))
                        ENDIF
                        sr_getconnection():exec(ccomm,,.t.,@cons_dup)
                	IF LEN(cons_dup) > 0
                                x := 0
                                FOR x = 1 TO LEN(cons_dup)
                                        prog_imp(x,DTOC(cons_dup[x,2]))
                                        *&*
                                        IF ! EMPTY(SUBSTR(mtipo_conta,1,1))
                                                IF SUBSTR(mtipo_conta,1,1) <> SUBSTR(cons_dup[x,3],1,1)
                                                        LOOP
                                                ENDIF
                                                IF ! EMPTY(SUBSTR(mtipo_conta,3)) .AND. SUBSTR(mtipo_conta,3) <> SUBSTR(cons_dup[x,3],3)
                                                        LOOP
                                                ENDIF
                                        ENDIF
                                        IF cons_dup[x,4] = 'DU'
                                                m_doc[i,8] := m_doc[i,8] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,4] = 'CH'
                                                m_doc[i,9] := m_doc[i,9] + cons_dup[x,1]
                                        ELSE
                                                m_doc[i,10] := m_doc[i,10] + cons_dup[x,1]
                                        ENDIF
                                        m_doc[i,11] := m_doc[i,11] + cons_dup[x,1]
                                        mdoc_apag := mdoc_apag + 1
                                NEXT
                        ENDIF
                        cons_dup := {}
                        ccomm := "SELECT valor,venc,tipo FROM sacdupr WHERE venc = "+sr_cdbvalue(m_doc[i,1])
                        ccomm := ccomm + " AND pago IS NULL"
                        ccomm := ccomm + " AND baix_parc IS NULL"
                        IF ! EMPTY(mcod_vend)
                                ccomm := ccomm + " AND vendedor = "+sr_cdbvalue(STRZERO(mcod_vend,3))
                        ENDIF
                        IF ! EMPTY(mcod_cli)
                                ccomm := ccomm + " AND fornec = "+sr_cdbvalue(STRZERO(mcod_cli,5))
                        ENDIF
                        IF ! EMPTY(bank)
                                ccomm := ccomm + " AND banco = "+sr_cdbvalue(bank)
                        ENDIF
                        sr_getconnection():exec(ccomm,,.t.,@cons_dup)
                	IF LEN(cons_dup) > 0
                                x := 0
                                FOR x = 1 TO LEN(cons_dup)
                                        prog_imp(x,DTOC(cons_dup[x,2]))
                                        IF cons_dup[x,3] = 'CH'
                                                m_doc[i,2] := m_doc[i,2] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,3] = 'DU'
                                                m_doc[i,3] := m_doc[i,3] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,3] = 'CT'
                                                m_doc[i,5] := m_doc[i,5] + cons_dup[x,1]
                                        ELSE
                                                m_doc[i,6] := m_doc[i,6] + cons_dup[x,1]
                                        ENDIF
                                        m_doc[i,7] := m_doc[i,7] + cons_dup[x,1]
                                        mdoc_rec := mdoc_rec + 1
                                NEXT
                        ENDIF
                ELSEIF mtipo_rel = 'P'
                        mtit := 'RELATORIO DE CONTAS RECEBIDAS X PAGAS (Pagamentos)'
                        cons_dup := {}
                        ccomm := "SELECT valor,venc,tip_for,tipo FROM sacdupp WHERE datpag = "+sr_cdbvalue(m_doc[i,1])
                        ccomm := ccomm + " AND datpag IS NOT NULL"
                        IF ! EMPTY(mtipo_doc)
                                ccomm := ccomm + " AND tipo = "+sr_cdbvalue(mtipo_doc)
                        ENDIF
                        IF ! EMPTY(mcod_for)
                                ccomm := ccomm + " AND fornec = "+sr_cdbvalue(STRZERO(mcod_for,4))
                        ENDIF
                        sr_getconnection():exec(ccomm,,.t.,@cons_dup)
                	IF LEN(cons_dup) > 0
                                x := 0
                                FOR x = 1 TO LEN(cons_dup)
                                        prog_imp(x,DTOC(cons_dup[x,2]))
                                        *&*
                                        IF ! EMPTY(SUBSTR(mtipo_conta,1,1))
                                                IF SUBSTR(mtipo_conta,1,1) <> SUBSTR(cons_dup[x,3],1,1)
                                                        LOOP
                                                ENDIF
                                                IF ! EMPTY(SUBSTR(mtipo_conta,3)) .AND. SUBSTR(mtipo_conta,3) <> SUBSTR(cons_dup[x,3],3)
                                                        LOOP
                                                ENDIF
                                        ENDIF
                                        IF cons_dup[x,4] = 'DU'
                                                m_doc[i,8] := m_doc[i,8] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,4] = 'CH'
                                                m_doc[i,9] := m_doc[i,9] + cons_dup[x,1]
                                        ELSE
                                                m_doc[i,10] := m_doc[i,10] + cons_dup[x,1]
                                        ENDIF
                                        m_doc[i,11] := m_doc[i,11] + cons_dup[x,1]
                                        mdoc_apag := mdoc_apag + 1
                                NEXT
                        ENDIF
                        cons_dup := {}
                        ccomm := "SELECT valor,venc,tipo FROM sacdupr WHERE datpag = "+sr_cdbvalue(m_doc[i,1])
                        ccomm := ccomm + " AND pago IS NOT NULL"
                        IF ! EMPTY(mcod_vend)
                                ccomm := ccomm + " AND vendedor = "+sr_cdbvalue(STRZERO(mcod_vend,3))
                        ENDIF
                        IF ! EMPTY(mcod_cli)
                                ccomm := ccomm + " AND fornec = "+sr_cdbvalue(STRZERO(mcod_cli,5))
                        ENDIF
                        IF ! EMPTY(bank)
                                ccomm := ccomm + " AND banco = "+sr_cdbvalue(bank)
                        ENDIF
                        sr_getconnection():exec(ccomm,,.t.,@cons_dup)
                	IF LEN(cons_dup) > 0
                                x := 0
                                FOR x = 1 TO LEN(cons_dup)
                                        prog_imp(x,DTOC(cons_dup[x,2]))
                                        IF cons_dup[x,3] = 'CH'
                                                m_doc[i,2] := m_doc[i,2] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,3] = 'DU'
                                                m_doc[i,3] := m_doc[i,3] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,3] = 'CT'
                                                m_doc[i,5] := m_doc[i,5] + cons_dup[x,1]
                                        ELSE
                                                m_doc[i,6] := m_doc[i,6] + cons_dup[x,1]
                                        ENDIF
                                        m_doc[i,7] := m_doc[i,7] + cons_dup[x,1]
                                        mdoc_rec := mdoc_rec + 1
                                NEXT
                        ENDIF
                ELSE
                        mtit := 'RELATORIO DE CONTAS RECEBIDAS X PAGAS (Emissao)'
                        cons_dup := {}
                        ccomm := "SELECT valor,venc,tip_for,tipo FROM sacdupp WHERE emissao = "+sr_cdbvalue(m_doc[i,1])
                        //ccomm := ccomm + " AND datpag IS NULL"
                        IF ! EMPTY(mtipo_doc)
                                ccomm := ccomm + " AND tipo = "+sr_cdbvalue(mtipo_doc)
                        ENDIF
                        IF ! EMPTY(mcod_for)
                                ccomm := ccomm + " AND fornec = "+sr_cdbvalue(STRZERO(mcod_for,4))
                        ENDIF
                        sr_getconnection():exec(ccomm,,.t.,@cons_dup)
                	IF LEN(cons_dup) > 0
                                x := 0
                                FOR x = 1 TO LEN(cons_dup)
                                        prog_imp(x,DTOC(cons_dup[x,2]))
                                        *&*
                                        IF ! EMPTY(SUBSTR(mtipo_conta,1,1))
                                                IF SUBSTR(mtipo_conta,1,1) <> SUBSTR(cons_dup[x,3],1,1)
                                                        LOOP
                                                ENDIF
                                                IF ! EMPTY(SUBSTR(mtipo_conta,3)) .AND. SUBSTR(mtipo_conta,3) <> SUBSTR(cons_dup[x,3],3)
                                                        LOOP
                                                ENDIF
                                        ENDIF
                                        IF cons_dup[x,4] = 'DU'
                                                m_doc[i,8] := m_doc[i,8] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,4] = 'CH'
                                                m_doc[i,9] := m_doc[i,9] + cons_dup[x,1]
                                        ELSE
                                                m_doc[i,10] := m_doc[i,10] + cons_dup[x,1]
                                        ENDIF
                                        m_doc[i,11] := m_doc[i,11] + cons_dup[x,1]
                                        mdoc_apag := mdoc_apag + 1
                                NEXT
                        ENDIF
                        cons_dup := {}
                        ccomm := "SELECT valor,venc,tipo FROM sacdupr WHERE emissao = "+sr_cdbvalue(m_doc[i,1])
                        //ccomm := ccomm + " AND pago IS NULL"
                        ccomm := ccomm + " AND baix_parc IS NULL"
                        IF ! EMPTY(mcod_vend)
                                ccomm := ccomm + " AND vendedor = "+sr_cdbvalue(STRZERO(mcod_vend,3))
                        ENDIF
                        IF ! EMPTY(mcod_cli)
                                ccomm := ccomm + " AND fornec = "+sr_cdbvalue(STRZERO(mcod_cli,5))
                        ENDIF
                        IF ! EMPTY(bank)
                                ccomm := ccomm + " AND banco = "+sr_cdbvalue(bank)
                        ENDIF
                        sr_getconnection():exec(ccomm,,.t.,@cons_dup)
                	IF LEN(cons_dup) > 0
                                x := 0
                                FOR x = 1 TO LEN(cons_dup)
                                        prog_imp(x,DTOC(cons_dup[x,2]))
                                        IF cons_dup[x,3] = 'CH'
                                                m_doc[i,2] := m_doc[i,2] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,3] = 'DU'
                                                m_doc[i,3] := m_doc[i,3] + cons_dup[x,1]
                                        ELSEIF cons_dup[x,3] = 'CT'
                                                m_doc[i,5] := m_doc[i,5] + cons_dup[x,1]
                                        ELSE
                                                m_doc[i,6] := m_doc[i,6] + cons_dup[x,1]
                                        ENDIF
                                        m_doc[i,7] := m_doc[i,7] + cons_dup[x,1]
                                        mdoc_rec := mdoc_rec + 1
                                NEXT
                        ENDIF
                ENDIF
        NEXT
        IF ! imp_arq('APAGXREC.REL','R')
                LOOP
        ENDIF
        mtipo := DTOC(t_ini)+' a '+DTOC(t_fim)
        pag:=1
        i := 0
        msaldo := msaldo_ini
        cabecalho(pag,mtit,mtipo)
        imprt(mtipo_imp,'C')
        IF mtipo_det = 'D'
                DEVPOS(PROW()+1,00);DEVOUT("                            C O N T A S   A   R E C E B E R                C O N T A S   A   A P A G A R ")
                DEVPOS(PROW()+1,00);DEVOUT("  Data      Cheques  Duplicata    Cartaos     Outros        Total   Duplicata    Cheques     Outros        Total   Diferenca     Saldo R$")
                DEVPOS(PROW()+1,00);DEVOUT(REPLICATE("=",137))
                DEVPOS(PROW()+1,00);DEVOUT('SALDO INICIAL INFORMADO PELO OPERADOR')
                DEVPOS(PROW(),124);DEVOUT(TRANSFORM(msaldo,'99,999,999.99'))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT("  Data     Contas A Receber   Contas Apagar    Diferenca R$       Saldo R$")
                DEVPOS(PROW()+1,00);DEVOUT(REPLICATE("=",137))
                DEVPOS(PROW()+1,00);DEVOUT('SALDO INICIAL INFORMADO PELO OPERADOR')
                DEVPOS(PROW(),61);DEVOUT(TRANSFORM(msaldo,'99,999,999.99'))
        ENDIF
        i := 0
        FOR i = 1 TO LEN(m_doc)
                IF pag=0 .OR. PROW()>=57
                        pag=pag+1
                        IF pag>1
                                EJECT
                        ENDIF
                        cabecalho(pag,mtit,mtipo)
                        imprt(mtipo_imp,'C')
                        IF mtipo_det = 'D'
                                DEVPOS(PROW()+1,00);DEVOUT("                            C O N T A S   A   R E C E B E R                C O N T A S   A   A P A G A R ")
                                DEVPOS(PROW()+1,00);DEVOUT("  Data      Cheques  Duplicata    Cartaos     Outros        Total   Duplicata    Cheques     Outros        Total   Diferenca     Saldo R$")
                                DEVPOS(PROW()+1,00);DEVOUT(REPLICATE("=",137))
                        ELSE
                                DEVPOS(PROW()+1,00);DEVOUT("  Data     Contas A Receber   Contas Apagar    Diferenca R$       Saldo R$")
                                DEVPOS(PROW()+1,00);DEVOUT(REPLICATE("=",137))
                        ENDIF
                ENDIF
                IF EMPTY(m_doc[i,7]) .AND. EMPTY(m_doc[i,11])
                        LOOP
                ENDIF
                DEVPOS(PROW()+1,00);DEVOUT(m_doc[i,1])
                IF mtipo_det = 'D'
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,2],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,3],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,5],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,6],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,7],'9,999,999.99'))
                        DEVPOS(PROW(),PCOL()+2);DEVOUT(TRANSFORM(m_doc[i,8],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,9],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,10],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_doc[i,11],'9,999,999.99'))
                        DEVPOS(PROW(),PCOL()+2);DEVOUT(TRANSFORM(m_doc[i,7] - m_doc[i,11],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(msaldo + (m_doc[i,7] - m_doc[i,11]),'9,999,999.99'))
                ELSE
                        DEVPOS(PROW(),PCOL()+7);DEVOUT(TRANSFORM(m_doc[i,7],'9,999,999.99'))
                        DEVPOS(PROW(),PCOL()+4);DEVOUT(TRANSFORM(m_doc[i,11],'9,999,999.99'))
                        DEVPOS(PROW(),PCOL()+6);DEVOUT(TRANSFORM(m_doc[i,7] - m_doc[i,11],'999,999.99'))
                        DEVPOS(PROW(),PCOL()+3);DEVOUT(TRANSFORM(msaldo + (m_doc[i,7] - m_doc[i,11]),'9,999,999.99'))
                ENDIF
                msaldo := msaldo + (m_doc[i,7] - m_doc[i,11])
                mtot_rec := mtot_rec + m_doc[i,7]
                mtot_apa := mtot_apa + m_doc[i,11]
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT("*** RESUMO FINAL ***")
        IF mtipo_rel = 'V'
                DEVPOS(PROW()+2,00);DEVOUT("Total de Documentos A RECEBER Periodo: Qtd.:"+TRANSFORM(mdoc_rec,"@E 999,999,999")+" - R$:"+TRANSFORM(mtot_rec,"@E 99,999,999,999.99"))
                DEVPOS(PROW()+1,00);DEVOUT("Total de Documentos APAGAR no Periodo: Qtd.:"+TRANSFORM(mdoc_apag,"@E 999,999,999")+" - R$:"+TRANSFORM(mtot_apa,"@E 99,999,999,999.99"))
        ELSE
                DEVPOS(PROW()+2,00);DEVOUT("Total de Documentos A RECEBER Periodo: Qtd.:"+TRANSFORM(mdoc_rec,"@E 999,999,999")+" - R$:"+TRANSFORM(mtot_rec,"@E 99,999,999,999.99"))
                DEVPOS(PROW()+1,00);DEVOUT("Total de Documentos APAGAR no Periodo: Qtd.:"+TRANSFORM(mdoc_apag,"@E 999,999,999")+" - R$:"+TRANSFORM(mtot_apa,"@E 99,999,999,999.99"))
        ENDIF
        DEVPOS(PROW()+1,00);DEVOUT("                                                             -----------------")
        DEVPOS(PROW()+1,00);DEVOUT("Total de Diferenca no Periodo..............................: "+TRANSFORM(mtot_rec - mtot_apa,"@E 99,999,999,999.99"))
        DEVPOS(PROW()+2,00);DEVOUT(time())
        EJECT
        SETPRC(00,00)
        SET DEVI TO SCREEN;SET PRINT TO;SET PRINT OFF
        conf_impressao('APAGXREC.REL')
        /*
        IF mimp_tipo = 2
                lertexto('APAGXREC.REL')
        ELSEIF mtipo_imp = 'D'
                
        ELSE
                MYRUN('DOSPRINTER /RAW /DEL '+ALLTRIM(m_indiv[1,5])+'HTI.REL')
        ENDIF
        */
        wvw_lclosewindow()
        RETURN NIL
ENDDO
wvw_lclosewindow()
RETURN NIL
*************************** F I M ***************************
